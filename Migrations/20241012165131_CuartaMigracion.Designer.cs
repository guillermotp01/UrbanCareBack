// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using UrbanCareBack.Data;

#nullable disable

namespace UrbanCareBack.Migrations
{
    [DbContext(typeof(UrbanCareDbContext))]
    [Migration("20241012165131_CuartaMigracion")]
    partial class CuartaMigracion
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("UrbanCareBack.Models.Colaborador", b =>
                {
                    b.Property<int>("IdColaborador")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("IdColaborador"));

                    b.Property<string>("Apellido")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Celular")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Correo")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("NumDoc")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("OrganizacionId")
                        .HasColumnType("int");

                    b.Property<string>("TipoDoc")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("IdColaborador");

                    b.HasIndex("OrganizacionId");

                    b.ToTable("Colaboradores");
                });

            modelBuilder.Entity("UrbanCareBack.Models.Evento", b =>
                {
                    b.Property<int>("IdEvento")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("IdEvento"));

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("FechaFin")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("FechaInicio")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("LogEventoId")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("OrganizacionId")
                        .HasColumnType("int");

                    b.Property<int>("TipoEventoId")
                        .HasColumnType("int");

                    b.Property<string>("Ubicacion")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("IdEvento");

                    b.HasIndex("LogEventoId");

                    b.HasIndex("OrganizacionId");

                    b.HasIndex("TipoEventoId");

                    b.ToTable("Eventos");
                });

            modelBuilder.Entity("UrbanCareBack.Models.Insignia", b =>
                {
                    b.Property<int>("IdInsignia")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("IdInsignia"));

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("EventoId")
                        .HasColumnType("int");

                    b.Property<string>("NombreInsignia")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("ParticipanteId")
                        .HasColumnType("int");

                    b.HasKey("IdInsignia");

                    b.HasIndex("EventoId", "ParticipanteId");

                    b.ToTable("Insignias");
                });

            modelBuilder.Entity("UrbanCareBack.Models.LogEvento", b =>
                {
                    b.Property<int>("IdLogEvento")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("IdLogEvento"));

                    b.Property<bool>("Estado")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Fecha")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Hora")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("IdLogEvento");

                    b.ToTable("LogEventos");
                });

            modelBuilder.Entity("UrbanCareBack.Models.Participacion", b =>
                {
                    b.Property<int>("EventoId")
                        .HasColumnType("int");

                    b.Property<int>("ParticipanteId")
                        .HasColumnType("int");

                    b.Property<string>("FechaInscripcion")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("HoraInscripcion")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("EventoId", "ParticipanteId");

                    b.HasIndex("ParticipanteId");

                    b.ToTable("Participaciones");
                });

            modelBuilder.Entity("UrbanCareBack.Models.TipoDoc", b =>
                {
                    b.Property<int>("IdTipoDoc")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("IdTipoDoc"));

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("IdTipoDoc");

                    b.ToTable("TiposDoc");
                });

            modelBuilder.Entity("UrbanCareBack.Models.TipoEvento", b =>
                {
                    b.Property<int>("IdTipoEvento")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("IdTipoEvento"));

                    b.Property<string>("NombreEvento")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("IdTipoEvento");

                    b.ToTable("TiposEvento");
                });

            modelBuilder.Entity("UrbanCareBack.Models.Usuario", b =>
                {
                    b.Property<int>("IdUsuario")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("IdUsuario"));

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasMaxLength(13)
                        .HasColumnType("varchar(13)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("IdUsuario");

                    b.ToTable("Usuarios");

                    b.HasDiscriminator().HasValue("Usuario");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("UrbanCareBack.Models.Administrador", b =>
                {
                    b.HasBaseType("UrbanCareBack.Models.Usuario");

                    b.HasDiscriminator().HasValue("Administrador");
                });

            modelBuilder.Entity("UrbanCareBack.Models.Organizacion", b =>
                {
                    b.HasBaseType("UrbanCareBack.Models.Usuario");

                    b.Property<int>("AdministradorId")
                        .HasColumnType("int");

                    b.Property<string>("Celular")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("NombreOrg")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Ruc")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasIndex("AdministradorId");

                    b.ToTable("Usuarios", t =>
                        {
                            t.Property("Celular")
                                .HasColumnName("Organizacion_Celular");
                        });

                    b.HasDiscriminator().HasValue("Organizacion");
                });

            modelBuilder.Entity("UrbanCareBack.Models.Participante", b =>
                {
                    b.HasBaseType("UrbanCareBack.Models.Usuario");

                    b.Property<string>("Apellido")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Celular")
                        .HasColumnType("longtext");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("NumDoc")
                        .HasColumnType("longtext");

                    b.Property<int?>("TipoDocId")
                        .HasColumnType("int");

                    b.HasIndex("TipoDocId");

                    b.HasDiscriminator().HasValue("Participante");
                });

            modelBuilder.Entity("UrbanCareBack.Models.Colaborador", b =>
                {
                    b.HasOne("UrbanCareBack.Models.Organizacion", "Organizacion")
                        .WithMany("Colaboradores")
                        .HasForeignKey("OrganizacionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Organizacion");
                });

            modelBuilder.Entity("UrbanCareBack.Models.Evento", b =>
                {
                    b.HasOne("UrbanCareBack.Models.LogEvento", "LogEvento")
                        .WithMany("Eventos")
                        .HasForeignKey("LogEventoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("UrbanCareBack.Models.Organizacion", "Organizacion")
                        .WithMany("Eventos")
                        .HasForeignKey("OrganizacionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("UrbanCareBack.Models.TipoEvento", "TipoEvento")
                        .WithMany("Eventos")
                        .HasForeignKey("TipoEventoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("LogEvento");

                    b.Navigation("Organizacion");

                    b.Navigation("TipoEvento");
                });

            modelBuilder.Entity("UrbanCareBack.Models.Insignia", b =>
                {
                    b.HasOne("UrbanCareBack.Models.Participacion", "Participacion")
                        .WithMany("Insignias")
                        .HasForeignKey("EventoId", "ParticipanteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Participacion");
                });

            modelBuilder.Entity("UrbanCareBack.Models.Participacion", b =>
                {
                    b.HasOne("UrbanCareBack.Models.Evento", "Evento")
                        .WithMany("Participaciones")
                        .HasForeignKey("EventoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("UrbanCareBack.Models.Participante", "Participante")
                        .WithMany("Participaciones")
                        .HasForeignKey("ParticipanteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Evento");

                    b.Navigation("Participante");
                });

            modelBuilder.Entity("UrbanCareBack.Models.Organizacion", b =>
                {
                    b.HasOne("UrbanCareBack.Models.Administrador", "Administrador")
                        .WithMany()
                        .HasForeignKey("AdministradorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Administrador");
                });

            modelBuilder.Entity("UrbanCareBack.Models.Participante", b =>
                {
                    b.HasOne("UrbanCareBack.Models.TipoDoc", "TipoDoc")
                        .WithMany()
                        .HasForeignKey("TipoDocId");

                    b.Navigation("TipoDoc");
                });

            modelBuilder.Entity("UrbanCareBack.Models.Evento", b =>
                {
                    b.Navigation("Participaciones");
                });

            modelBuilder.Entity("UrbanCareBack.Models.LogEvento", b =>
                {
                    b.Navigation("Eventos");
                });

            modelBuilder.Entity("UrbanCareBack.Models.Participacion", b =>
                {
                    b.Navigation("Insignias");
                });

            modelBuilder.Entity("UrbanCareBack.Models.TipoEvento", b =>
                {
                    b.Navigation("Eventos");
                });

            modelBuilder.Entity("UrbanCareBack.Models.Organizacion", b =>
                {
                    b.Navigation("Colaboradores");

                    b.Navigation("Eventos");
                });

            modelBuilder.Entity("UrbanCareBack.Models.Participante", b =>
                {
                    b.Navigation("Participaciones");
                });
#pragma warning restore 612, 618
        }
    }
}
